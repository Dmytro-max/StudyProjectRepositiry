// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                String          @id @default(uuid())
  name              String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  description       String?
  coverImageUrl     String?
  tradeMark         String?
  quantityInPackage String?
  termsOfSale       String?
  countryOfOrigin   String?
  releaseForm       String?

  categoryId        String
  category          ProductCategory? @relation(fields: [categoryId], references: [id])
}

model ProductCategory {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String?

  products    Product[]
}

model User {
  id        String   @id @default(uuid()) 
  firstName      String
  lastName String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  email String @unique
  hash String
  hashRt String?
}

model Pharmacy {
  id        String   @id @default(uuid()) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  address   String
  lat       String   // Consider using `Decimal` or `Float` if you want to store lat/lng as numbers
  lng       String   // Same for longitude
}
